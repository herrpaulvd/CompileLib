class String
{
	private uint64 size;
	private uint64 capacity;
	private char[] buffer;

	public static String ReadLine()
	{
		var String s = new;
		s.buffer = System.ReadLine(&s.size);
		s.capacity = s.size;
		return s;
	}

	public static String FromCharArray(char[] buffer)
	{
		var String s = new;
		s.buffer = buffer;
		while(buffer[s.size] != uint64(0))
			s.size = s.size + uint64(1);
		s.capacity = s.size;
		return s;
	}

	public void PushBack(char c)
	{
		if(size == capacity)
		{
			capacity = capacity * uint64(2);
			buffer = char[](System.realloc(buffer, capacity * uint64(2)));
		}

		buffer[size] = c;
		size = size + uint64(1);
	}

	public uint64 ToInt()
	{
		var uint64 result = uint64(0);
		for(var uint64 i = uint64(0); i < size; i = i + uint64(1);)
		{
			var uint64 x = uint64(buffer[i] - '0');
			result = result * uint64(10) + x;
		}
		return result;
	}

	public static String FromInt(uint64 x)
	{
		var String s = new;
		s.size = uint64(0);
		s.capacity = uint64(8);
		s.buffer = char[](System.malloc(s.capacity * uint64(2)));
		while(x > uint64(0))
		{
			var uint64 div = x / uint64(10);
			var uint64 mod = x - div * uint64(10);
			s.PushBack(char(mod + '0'));
			x = div;
		}
		for(var uint64 i = uint64(0); i < s.size / uint64(2); i = i + uint64(1);)
		{
			var uint64 j = s.size - uint64(1) - i;
			var char t = s.buffer[i];
			s.buffer[i] = s.buffer[j];
			s.buffer[j] = t;
		}
		if(s.size == uint64(0))
			s.PushBack('0');
		else

	}

	public void Write()
	{
		System.Write(buffer, size);
	}

	public void WriteLine()
	{
		Write();
		System.Write("\r\n", uint64(2));
	}
}

class Point2
{
	protected uint64 x;
	protected uint64 y;

	public static Point2 Create(uint64 x, uint64 y)
	{
		var Point2 p = new;
		p.x = x;
		p.y = y;
		return p;
	}
}

class Point3 : Point2
{
	private uint64 z;

	public static Point3 Create(uint64 x, uint64 y, uint64 z)
	{
		var Point3 p = new;
		p.x = x;
		p.y = y;
		p.z = z;
		return p;
	}

	public uint64 Abs() return x + y + z;
}

class Program
{
	private static uint64 ReadCoord(char[] name)
	{
		String.FromCharArray(name).Write();
		String.FromCharArray(" = ").Write();
		return String.ReadLine().ToInt();
	}

	public static void Main()
	{
		String.FromInt(Point3.Create(ReadCoord("x"), ReadCoord("y"), ReadCoord("z")).Abs()).WriteLine();
	}
}


